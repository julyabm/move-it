{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/ReactJS/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\ReactJS\\\\moveit-next\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { CountdownContext } from '../contexts/CountdownContext';\nimport styles from '../styles/components/Countdown.module.css';\nexport function Countdown() {\n  _s();\n\n  var _useContext = useContext(CountdownContext),\n      minutes = _useContext.minutes,\n      seconds = _useContext.seconds,\n      hasFinished = _useContext.hasFinished;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CountdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.CountdownButton,\n      children: \"Ciclo encerrado!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.CountdownButton, \" \").concat(styles.CountdownButtonActive),\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.CountdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"8iuVZU6B5apWXR3PP0mYUvauEEs=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/ReactJS/moveit-next/src/components/Countdown.tsx"],"names":["useContext","CountdownContext","styles","Countdown","minutes","seconds","hasFinished","String","padStart","split","minuteLeft","minuteRight","secondLeft","secondRight","CountdownContainer","CountdownButton","isActive","CountdownButtonActive","resetCountdown","startCountdown"],"mappings":";;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAIA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,oBACgBH,UAAU,CAACC,gBAAD,CAD1B;AAAA,MACjBG,OADiB,eACjBA,OADiB;AAAA,MACRC,OADQ,eACRA,OADQ;AAAA,MACCC,WADD,eACCA,WADD;;AAAA,8BAGUC,MAAM,CAACH,OAAD,CAAN,CAAgBI,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAHV;AAAA;AAAA,MAGjBC,UAHiB;AAAA,MAGLC,WAHK;;AAAA,+BAIUJ,MAAM,CAACF,OAAD,CAAN,CAAgBG,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAJV;AAAA;AAAA,MAIjBG,UAJiB;AAAA,MAILC,WAJK;;AAQxB,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEX,MAAM,CAACY,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKP,WAAW,gBACR;AACA,MAAA,QAAQ,MADR;AAEA,MAAA,SAAS,EAAGJ,MAAM,CAACa,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAQR;AAAA,gBACKC,QAAQ,gBAAK;AACtB,QAAA,IAAI,EAAC,QADiB;AAEtB,QAAA,SAAS,YAAMd,MAAM,CAACa,eAAb,cAAgCb,MAAM,CAACe,qBAAvC,CAFa;AAGtB,QAAA,OAAO,EAAEC,cAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAL,gBAOZ;AACD,QAAA,IAAI,EAAC,QADJ;AAED,QAAA,SAAS,EAAEhB,MAAM,CAACa,eAFjB;AAGD,QAAA,OAAO,EAAEI,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARD,qBArBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH;;GAnDehB,S;;KAAAA,S","sourcesContent":["import { useContext } from 'react';\r\nimport { CountdownContext } from '../contexts/CountdownContext';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\n\r\n\r\nexport function Countdown() {\r\n    const {minutes, seconds, hasFinished} = useContext(CountdownContext)\r\n   \r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.CountdownContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {hasFinished ? (\r\n                <button \r\n                disabled\r\n                className= {styles.CountdownButton}\r\n                >\r\n                 Ciclo encerrado!\r\n                </button>\r\n            ) : (\r\n                <>\r\n                    {isActive ? ( <button \r\n            type=\"button\"\r\n            className= {`${styles.CountdownButton} ${styles.CountdownButtonActive}`}\r\n            onClick={resetCountdown}\r\n            >\r\n             Abandonar ciclo\r\n            </button>\r\n            ) : (<button \r\n                type=\"button\" \r\n                className={styles.CountdownButton}\r\n                onClick={startCountdown}\r\n                >\r\n                Iniciar um ciclo\r\n                </button>\r\n            )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}