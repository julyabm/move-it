{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\ReactJS\\\\moveit-next\\\\src\\\\contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport challenges from '../../challenges.json';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var ramdomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[ramdomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3');\n\n    if (Notification.permission == 'granted') {\n      new Notification('Novo desafio ðŸŽ‰', {\n        body: \"Valendo \".concat(challenge.amount, \"xp\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      experienceToNextLevel: experienceToNextLevel,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChallengesProvider, \"QFoxBKA6zLcp0YG61QYOBtmx7CQ=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/ReactJS/moveit-next/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","levelUp","startNewChallenge","ramdomChallengeIndex","floor","random","length","challenge","Audio","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAyBA,OAAO,IAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASK,kBAAT,OAAgE;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;;AAAA,kBAC3CL,QAAQ,CAAC,CAAD,CADmC;AAAA,MAC5DM,KAD4D;AAAA,MACrDC,QADqD;;AAAA,mBAElBP,QAAQ,CAAC,CAAD,CAFU;AAAA,MAE5DQ,iBAF4D;AAAA,MAE1CC,oBAF0C;;AAAA,mBAGbT,QAAQ,CAAC,CAAD,CAHK;AAAA,MAG5DU,mBAH4D;AAAA,MAGvCC,sBAHuC;;AAAA,mBAKrBX,QAAQ,CAAC,IAAD,CALa;AAAA,MAK5DY,eAL4D;AAAA,MAK3CC,kBAL2C;;AAOnE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAC,CAAP,IAAW,CAApB,EAAuB,CAAvB,CAA9B;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZgB,IAAAA,YAAY,CAACC,iBAAb;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,OAAT,GAAkB;AACdZ,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACH;;AAED,WAASc,iBAAT,GAA4B;AACxB,QAAOC,oBAAoB,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBrB,UAAU,CAACsB,MAAtC,CAA9B;AACA,QAAMC,SAAS,GAAGvB,UAAU,CAACmB,oBAAD,CAA5B;AAEAR,IAAAA,kBAAkB,CAACY,SAAD,CAAlB;AAEA,QAAIC,KAAJ,CAAU,mBAAV;;AAEA,QAAIT,YAAY,CAACU,UAAb,IAA2B,SAA/B,EAA0C;AACtC,UAAIV,YAAJ,CAAiB,iBAAjB,EAAoC;AAChCW,QAAAA,IAAI,oBAAaH,SAAS,CAACI,MAAvB;AAD4B,OAApC;AAGH;AACJ;;AAED,WAASC,cAAT,GAAyB;AACrBjB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASkB,iBAAT,GAA4B;AACxB,QAAI,CAACnB,eAAL,EAAsB;AAClB;AACH;;AAHuB,QAKjBiB,MALiB,GAKPjB,eALO,CAKjBiB,MALiB;AAOxB,QAAIG,eAAe,GAAGxB,iBAAiB,GAAGqB,MAA1C;;AAEA,QAAIG,eAAe,IAAIlB,qBAAvB,EAA6C;AACzCkB,MAAAA,eAAe,GAAGA,eAAe,GAAElB,qBAAnC;AACAK,MAAAA,OAAO;AACV;;AAEDV,IAAAA,oBAAoB,CAACuB,eAAD,CAApB;AACAnB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAC,CAArB,CAAtB;AACH;;AAEF,sBACC,QAAC,iBAAD,CAAmB,QAAnB;AACA,IAAA,KAAK,EAAE;AACHJ,MAAAA,KAAK,EAALA,KADG;AAEHE,MAAAA,iBAAiB,EAAjBA,iBAFG;AAGHM,MAAAA,qBAAqB,EAArBA,qBAHG;AAIHJ,MAAAA,mBAAmB,EAAnBA,mBAJG;AAKHS,MAAAA,OAAO,EAAPA,OALG;AAMHC,MAAAA,iBAAiB,EAAjBA,iBANG;AAOHR,MAAAA,eAAe,EAAfA,eAPG;AAQHkB,MAAAA,cAAc,EAAdA,cARG;AASHC,MAAAA,iBAAiB,EAAjBA;AATG,KADP;AAAA,cAYK1B;AAZL;AAAA;AAAA;AAAA;AAAA,UADD;AAgBF;;GAvEeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react';\r\nimport challenges from '../../challenges.json';\r\n\r\ninterface Challenge {\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    currentExperience: number;\r\n    experienceToNextLevel: number;\r\n    challengesCompleted: number;\r\n    activeChallenge: Challenge;\r\n    levelUp: () => void;\r\n    startNewChallenge: () => void;\r\n    resetChallenge: () => void;\r\n    completeChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({children}: ChallengesProviderProps){\r\n    const [level, setLevel]=useState(1);\r\n    const [currentExperience,setCurrentExperience] = useState(0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(0);\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null);\r\n\r\n    const experienceToNextLevel = Math.pow((level+1)* 4, 2);\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n    }, [])\r\n\r\n    function levelUp(){\r\n        setLevel(level+1);\r\n    }\r\n\r\n    function startNewChallenge(){\r\n        const  ramdomChallengeIndex = Math.floor(Math.random() * challenges.length)\r\n        const challenge = challenges[ramdomChallengeIndex];\r\n\r\n        setActiveChallenge(challenge)\r\n\r\n        new Audio('/notification.mp3')\r\n        \r\n        if (Notification.permission == 'granted') {\r\n            new Notification('Novo desafio ðŸŽ‰', { \r\n                body: `Valendo ${challenge.amount}xp`\r\n            })\r\n        }\r\n    }\r\n\r\n    function resetChallenge(){\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completeChallenge(){\r\n        if (!activeChallenge) { \r\n            return; \r\n        }\r\n\r\n        const {amount} = activeChallenge;\r\n\r\n        let finalExperience = currentExperience + amount;\r\n\r\n        if (finalExperience >= experienceToNextLevel){\r\n            finalExperience = finalExperience -experienceToNextLevel;\r\n            levelUp();\r\n        }  \r\n        \r\n        setCurrentExperience(finalExperience);\r\n        setActiveChallenge(null);\r\n        setChallengesCompleted(challengesCompleted+1);\r\n    }\r\n\r\n   return (\r\n    <ChallengesContext.Provider \r\n    value={{\r\n        level, \r\n        currentExperience, \r\n        experienceToNextLevel,\r\n        challengesCompleted, \r\n        levelUp,\r\n        startNewChallenge,\r\n        activeChallenge,\r\n        resetChallenge,\r\n        completeChallenge,\r\n         }}>\r\n        {children}\r\n    </ChallengesContext.Provider>\r\n   ) \r\n} \r\n\r\n"]},"metadata":{},"sourceType":"module"}