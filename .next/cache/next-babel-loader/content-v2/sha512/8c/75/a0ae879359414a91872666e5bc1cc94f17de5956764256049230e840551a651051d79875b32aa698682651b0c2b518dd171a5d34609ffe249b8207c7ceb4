{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/ReactJS/moveit-next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\ReactJS\\\\moveit-next\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport styles from '../styles/components/Countdown.module.css';\nvar countdownTimeout;\nexport function Countdown() {\n  _s();\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(function () {\n    if (isActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isActive && time == 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isActive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CountdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.CountdownButton,\n      children: \"Ciclo encerrado!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.CountdownButton, \" \").concat(styles.CountdownButtonActive),\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.CountdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/ReactJS/moveit-next/src/components/Countdown.tsx"],"names":["useEffect","styles","countdownTimeout","Countdown","String","minutes","padStart","split","minuteLeft","minuteRight","seconds","secondLeft","secondRight","startCountdown","setIsActive","resetCountdown","clearTimeout","setTime","isActive","time","setTimeout","setHasFinished","startNewChallenge","CountdownContainer","hasFinished","CountdownButton","CountdownButtonActive"],"mappings":";;;;;;;AACA,SAAmBA,SAAnB,QAAgD,OAAhD;AAEA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,IAAIC,gBAAJ;AAEA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,8BAEUC,MAAM,CAACC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAFV;AAAA;AAAA,MAEjBC,UAFiB;AAAA,MAELC,WAFK;;AAAA,+BAGUL,MAAM,CAACM,OAAD,CAAN,CAAgBJ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAHV;AAAA;AAAA,MAGjBI,UAHiB;AAAA,MAGLC,WAHK;;AAKxB,WAASC,cAAT,GAAyB;AACrBC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASC,cAAT,GAA0B;AACtBC,IAAAA,YAAY,CAACd,gBAAD,CAAZ;AACAY,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAG,IAAAA,OAAO,CAAC,MAAI,EAAL,CAAP;AAEH;;AAEDjB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIkB,QAAQ,IAAIC,IAAI,GAAC,CAArB,EAAuB;AACnBjB,MAAAA,gBAAgB,GAAGkB,UAAU,CAAC,YAAM;AAChCH,QAAAA,OAAO,CAACE,IAAI,GAAC,CAAN,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIO,IAAID,QAAQ,IAAIC,IAAI,IAAG,CAAvB,EAA0B;AAC7BE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAP,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAQ,MAAAA,iBAAiB;AACpB;AACJ,GAVQ,EAUN,CAACJ,QAAD,EAAWC,IAAX,CAVM,CAAT;AAYA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACsB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOf;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKY,WAAW,gBACR;AACA,MAAA,QAAQ,MADR;AAEA,MAAA,SAAS,EAAGvB,MAAM,CAACwB,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAQR;AAAA,gBACKP,QAAQ,gBAAK;AACtB,QAAA,IAAI,EAAC,QADiB;AAEtB,QAAA,SAAS,YAAMjB,MAAM,CAACwB,eAAb,cAAgCxB,MAAM,CAACyB,qBAAvC,CAFa;AAGtB,QAAA,OAAO,EAAEX,cAHa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAL,gBAOZ;AACD,QAAA,IAAI,EAAC,QADJ;AAED,QAAA,SAAS,EAAEd,MAAM,CAACwB,eAFjB;AAGD,QAAA,OAAO,EAAEZ,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARD,qBArBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH;;GAvEeV,S;;KAAAA,S","sourcesContent":["import { clear } from 'console';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport { ChallengesContext } from '../contexts/ChallengesContext';\r\nimport styles from '../styles/components/Countdown.module.css';\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function Countdown() {\r\n   \r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n    function startCountdown(){\r\n        setIsActive(true);\r\n    }\r\n\r\n    function resetCountdown() {\r\n        clearTimeout(countdownTimeout);\r\n        setIsActive(false);\r\n        setTime(0.1*60);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isActive && time>0){\r\n            countdownTimeout = setTimeout(() => {\r\n                setTime(time-1);\r\n            }, 1000)  \r\n        } else if (isActive && time ==0) {\r\n            setHasFinished(true);\r\n            setIsActive(false);\r\n            startNewChallenge();\r\n        }\r\n    }, [isActive, time])\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.CountdownContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {hasFinished ? (\r\n                <button \r\n                disabled\r\n                className= {styles.CountdownButton}\r\n                >\r\n                 Ciclo encerrado!\r\n                </button>\r\n            ) : (\r\n                <>\r\n                    {isActive ? ( <button \r\n            type=\"button\"\r\n            className= {`${styles.CountdownButton} ${styles.CountdownButtonActive}`}\r\n            onClick={resetCountdown}\r\n            >\r\n             Abandonar ciclo\r\n            </button>\r\n            ) : (<button \r\n                type=\"button\" \r\n                className={styles.CountdownButton}\r\n                onClick={startCountdown}\r\n                >\r\n                Iniciar um ciclo\r\n                </button>\r\n            )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}